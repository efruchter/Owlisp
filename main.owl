(defunc MultAdd X Y (
	(+ (* X Y) Y)
))

(defunc fMin X Y (
	(? (< X Y) X Y)
))

(= endl `\n`)
(= A 9)
(= B 6)
(println `Result: ` (MultAdd A B))
(println (fMin 8 5))
(defunc Sqr X (* X X))

(`Test of map function`)
(print endl `Map: ` (strjoin ` ` (map Sqr (1 2 3 4))) endl)
(print endl `Map-Inline: ` (strjoin ` ` (map (X (* X X)) (1 2 3 4))) endl)

(`This is a test of reduce`)
(defunc ListSum Sum Entry (
	(+ Sum Entry)
))
(print endl `ListSum: ` (reduce ListSum (1 2 3 4 5)) endl)

(print endl `Concat: ` (strjoin ` ` (4 8 5)) endl)
